# -*- coding: utf-8 -*-
"""ATGCPROFILER.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UgtjPs1N6XW8TgXjUvsjfEVLyg3osVkB
"""

!pip install biopython

import csv
import matplotlib.pyplot as plt
from Bio import Entrez, SeqIO
from collections import Counter

def fetch_sequences(organism, email, max_records=15):
    Entrez.email = email
    handle = Entrez.esearch(db="nucleotide", term=organism, retmax=max_records)
    record = Entrez.read(handle)
    ids = record["IdList"]
    handle.close()

    sequences = []
    for seq_id in ids:
        fetch_handle = Entrez.efetch(db="nucleotide", id=seq_id, rettype="fasta", retmode="text")
        records = list(SeqIO.parse(fetch_handle, "fasta-pearson"))
        fetch_handle.close()

        if not records:
            print(f"‚ö†Ô∏è Warning: No sequences found for ID {seq_id}")
            continue

        sequences.append(records[0])

    return sequences

def calculate_atgc_percentage(seq_record):
    seq = seq_record.seq.upper()
    counts = Counter(seq)
    total = len(seq)
    atgc = {nuc: counts.get(nuc, 0) / total * 100 for nuc in ["A", "T", "G", "C"]}
    return atgc

def save_to_csv(sequences, atgc_list, filename="sequence_stats.csv"):
    with open(filename, "w", newline='') as csvfile:
        writer = csv.writer(csvfile)
        writer.writerow(["Sequence_ID", "Length", "A%", "T%", "G%", "C%"])
        for seq, atgc in zip(sequences, atgc_list):
            writer.writerow([seq.id, len(seq.seq), f"{atgc['A']:.2f}", f"{atgc['T']:.2f}", f"{atgc['G']:.2f}", f"{atgc['C']:.2f}"])
    print(f"‚úÖ Saved sequence stats to {filename}")

def plot_atgc_distribution(sequences, atgc_list):
    labels = [seq.id for seq in sequences]
    bases = ['A', 'T', 'G', 'C']
    data = {base: [atgc[base] for atgc in atgc_list] for base in bases}

    x = range(len(sequences))
    width = 0.2

    plt.figure(figsize=(12, 6))
    for i, base in enumerate(bases):
        plt.bar([pos + i*width for pos in x], data[base], width=width, label=base)

    plt.xticks([pos + 1.5*width for pos in x], labels, rotation=45, ha='right')
    plt.xlabel('Sequence ID')
    plt.ylabel('Percentage (%)')
    plt.title('ATGC Percentage Distribution per Sequence')
    plt.legend()
    plt.tight_layout()
    plt.grid(axis='y')
    plt.show()

def main():
    organism = input("Enter the organism name: ")
    email = input("Enter your email (required for NCBI API): ")

    print(f"\nFetching sequences for '{organism}' from NCBI...")
    sequences = fetch_sequences(organism, email, max_records=15)

    print(f"Fetched {len(sequences)} sequence(s).\n")

    atgc_list = []
    for i, seq_record in enumerate(sequences, 1):
        atgc = calculate_atgc_percentage(seq_record)
        atgc_list.append(atgc)
        print(f"Sequence {i} - {seq_record.id}:")
        print(f"  Length: {len(seq_record.seq)} bp")
        print(f"  A: {atgc['A']:.2f}%  T: {atgc['T']:.2f}%  G: {atgc['G']:.2f}%  C: {atgc['C']:.2f}%\n")

    choice = input("Do you want to (1) Save stats as Excel CSV, (2) See a visual graph, (3) Both, or (4) None? Enter 1, 2, 3, or 4: ").strip()

    if choice == '1':
        save_to_csv(sequences, atgc_list)
        try:
            from google.colab import files
            files.download("sequence_stats.csv")
        except ImportError:
            print("üìÅ CSV file saved locally (not using Google Colab).")
    elif choice == '2':
        plot_atgc_distribution(sequences, atgc_list)
    elif choice == '3':
        save_to_csv(sequences, atgc_list)
        try:
            from google.colab import files
            files.download("sequence_stats.csv")
        except ImportError:
            print("üìÅ CSV file saved locally (not using Google Colab).")
        plot_atgc_distribution(sequences, atgc_list)
    else:
        print("No output selected. Exiting.")

if __name__ == "__main__":
    main()